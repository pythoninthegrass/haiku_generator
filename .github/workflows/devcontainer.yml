# https://github.com/devcontainers/ci/blob/main/docs/github-action.md

name: 'devcontainer'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
  schedule: # rebuild once a week at midnight on saturday
    - cron: '0 0 * * 6'

jobs:
  ci:
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [x64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v4

      - name: Prepare docker image name
        id: image_names
        run: |
          IMAGES="${GITHUB_REPOSITORY/docker-/},ghcr.io/${GITHUB_REPOSITORY/docker-/}"
          echo ::set-output name=images::${IMAGES}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.image_names.outputs.images }}
          tags: |
            type=ref,event=tag

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.arch }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Pre-build image and run command in dev container
      #   uses: devcontainers/ci@v0.3
      #   with:
      #     imageName: ghcr.io/pythoninthegrass/haiku_generator
      #     cacheFrom: ghcr.io/pythoninthegrass/haiku_generator
      #     noCache: true
      #     push: always
      #     runCmd: |
      #       echo "Hello, haiku enthusiast!"

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          # platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}
